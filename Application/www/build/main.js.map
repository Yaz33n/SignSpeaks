{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts","../../src/pages/convertor/convertor.ts","../../src/pages/login/login.ts","../../src/pages/register/register.ts","../../src/app/user.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 116;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 116\n// module chunks = 3","var map = {\n\t\"../pages/convertor/convertor.module\": [\n\t\t279,\n\t\t2\n\t],\n\t\"../pages/login/login.module\": [\n\t\t280,\n\t\t1\n\t],\n\t\"../pages/register/register.module\": [\n\t\t281,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 157;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 157\n// module chunks = 3","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { RegisterPage } from '../pages/register/register';\nimport { LoginPage } from '../pages/login/login';\nimport { ConvertorPage } from '../pages/convertor/convertor';\n\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { TextToSpeech } from '@ionic-native/text-to-speech';\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\n\nimport { UserService } from './user.service';\nimport { HttpModule } from '@angular/http';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    RegisterPage,\n    LoginPage,\n    ConvertorPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    RegisterPage,\n    LoginPage,\n    ConvertorPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    BluetoothSerial,\n    TextToSpeech,\n    SpeechRecognition,\n    UserService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler }\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AlertController } from 'ionic-angular';\n\n\nimport { HomePage } from '../pages/home/home';\nimport { RegisterPage } from '../pages/register/register';\nimport { LoginPage } from '../pages/login/login';\nimport { ConvertorPage } from '../pages/convertor/convertor';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = RegisterPage;\n\n  pages: Array<{title: string, component: any,icon:any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen,private alertCtrl: AlertController) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Device Info', component: HomePage , icon:'ios-bluetooth'},\n      { title: 'Convertor', component: ConvertorPage ,icon:'ios-analytics-outline'}\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  //this method will log the user out\n  logOut(){\n    let alert = this.alertCtrl.create({\n      title: 'Log out',\n      message: 'Do you really want to Log Out?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Log Out',\n          handler: () => {\n              this.nav.push(LoginPage);\n            console.log(\"Logged out!\");     \n          }\n        }\n      ]\n    });\n    alert.present();\n   \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AlertController } from 'ionic-angular';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { ConvertorPage } from '../convertor/convertor';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  //the below boolean with store true if  CONNECTED to anoter device or flase if NOT \n  connectionStatus:boolean;\n\n  //defining the instance variables\n  unpairedDevices: any;\n  pairedDevices: any;\n  //the below boolean with store true or false based on the scanning state\n  gettingDevices: Boolean; \n  \n\n  //=== === === === === === === === === === === === === === === === === === === === === === === ===\n  \n  constructor(public navCtrl: NavController,private alertCtrl: AlertController,private bluetoothSerial: BluetoothSerial) {\n\n    //enabling the blutooth serial for communication\n    bluetoothSerial.enable();\n  }\n\n  //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n  //this method will scann the available bluetooth devices\n  startScanning() {\n    this.pairedDevices = null;\n    this.unpairedDevices = null;\n    this.gettingDevices = true;\n\n    this.bluetoothSerial.discoverUnpaired().then((success) => {\n      this.unpairedDevices = success;\n      this.gettingDevices = false;\n      //if discoverUnpaired is succesfull the below statements will run\n      success.forEach(element => {\n      // alert(element.name);\n      });\n    },\n      //if discoverUnpaired Fails ,the below statements will run\n      (err) => {\n        console.log(err);\n      })\n    //listing all the devices\n    this.bluetoothSerial.list().then((success) => {\n      this.pairedDevices = success;\n    },\n      (err) => {\n\n      })\n  }\n\n  //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n  //this method is used to select a device and connect to it\n  selectDevice(address: any) {\n        //confirmation alert to CONNECT\n        let alert = this.alertCtrl.create({\n          title: 'Connect',\n          message: 'Do you want to connect with?',\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              handler: () => {\n                console.log('Cancel clicked');\n              }\n            },\n            {\n              text: 'Connect',\n              handler: () => {\n                //if connect is pressed : the phone will try to connect to the blutooth device\n                this.bluetoothSerial.connect(address).subscribe(this.success, this.fail);\n                //this method will set the connection stus to true and update ui\n                this.setTrueValConnectStatus();\n              }\n            }\n          ]\n        });\n        alert.present();\n    \n      }\n      //this is used with the connection to a device is SUCCESSFULL\n      success = (data) =>{\n        //this method will set the connection stus to true and update ui\n        this.setTrueValConnectStatus();\n        alert(data);\n        alert(\"Device connected :)\");   \n      } \n      //this is used with the connection to a device FAILS\n      fail = (error) => {\n        //this method will set the connection stus to false and update ui\n        this.setFalseValConnectStatus();\n        alert(error);\n        alert(\"Device failed to connect :(\");      \n      } \n\n      //=== === === === === === === === === === === === === === === === === === === === === === === ===\n    \n      //this method is used to DISCONNECT a selected device \n      disconnect() {\n        //confirmation alert to disconnect\n        let alert = this.alertCtrl.create({\n          title: 'Disconnect?',\n          message: 'Do you want to Disconnect?',\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              handler: () => {\n                console.log('Cancel clicked');\n              }\n            },\n            {\n              text: 'Disconnect',\n              handler: () => {\n                //disconnecting the device\n                this.bluetoothSerial.disconnect();\n                this.setFalseValConnectStatus();\n                console.log(\"disconnected!\");     \n              }\n            }\n          ]\n        });\n        alert.present();\n      }\n\n      //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n\n      //this method will SEND data via the bluethooth serial\n      sendDataToBluetooth(){\n          this.bluetoothSerial.write('Hello aathif anna'); \n      }\n    \n      //this method will READ data via the bluethooth serial\n      readDataToBluetooth(){\n        var dataVal=this.bluetoothSerial.read();\n        dataVal.then(function(result) {\n          alert(\"DataVal :\"+result)\n        });\n      }\n\n      /*\n      subscriberReadDataToBluetooth(){\n        // the success callback is called whenever data is received\n        this.bluetoothSerialObj.subscribe('\\n', function (data) {\n        console.log(data);\n        alert(\"dataStringSunscribed :\"+data)\n        this.dataStringSunscribed=data;\n        });\n      }\n      */\n\n      //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n      //navigate to the convertor page\n      goToConvertorPage(){\n        this.navCtrl.push(ConvertorPage,{\n          bluetoothSerialObj: this.bluetoothSerial,\n          connectionStatus:this.connectionStatus\n        });\n      }\n      //=== === === === === === === === === === === === === === === === === === === === === === === ===\n  \n      //this method will set the connection stus to true \n      setTrueValConnectStatus(){\n        this.connectionStatus=true;\n        console.log(this.connectionStatus);\n      }\n      //this method will set the connection stus to false \n      setFalseValConnectStatus(){\n        this.connectionStatus=false;\n        console.log(this.connectionStatus);\n      }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { HomePage } from '../home/home';\n\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { TextToSpeech } from '@ionic-native/text-to-speech';\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-convertor',\n  templateUrl: 'convertor.html',\n})\nexport class ConvertorPage {\n\n  // dataString = \"blank\";\n\n  //this variable will save true of flase based on the sound on off toggle\n  isSoundOn:boolean=true;\n  //this variable will store the connection status - If Connected to device or not\n  connectionStatus: boolean = false;\n  //this variable will store if the user is subcribed to bluetooth serial or not\n  isSubscribedToBluetooth:boolean=false;\n  //this variable will store the message from the bluetotth serial \n  msgFromGlove: any = \"Message from glove\";\n  //this variable will store the text retured from the speech convertion\n  convertedSpeechMessage:any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public bluetoothSerial: BluetoothSerial,public textToSpeech: TextToSpeech, public speechRecognition: SpeechRecognition) {\n\n    //Getting the data passed from the previous page\n    this.bluetoothSerial = navParams.get('bluetoothSerialObj');\n    this.connectionStatus = navParams.get('connectionStatus');\n\n    //ERRORRRR DUE TO THIS in browser !!! But it works in real device\n    //this.subscribeDataFromBluetooth(); \n\n  }\n\n  //=== === === === === ===  TEXT TO SPEECH AND SPEECH TO TEXT METODS === === === === === ===\n    \n  //this method will convert TEXT to SPEECH and play \n  async sayText():Promise<any>{\n    try {\n      await this.textToSpeech.speak(this.msgFromGlove);\n      console.log(\"Success\")\n\n    } catch (error) {\n      console.log(\"ERROR :\"+error)\n    }\n\n  }\n\n  // ------------------ SPEECH to TEXT ------------------\n\n  //checking is speech recognition is Available on the device\n  async isSpeechSupported():Promise<boolean>{\n    const isAvailable =await this.speechRecognition.isRecognitionAvailable();\n    console.log(isAvailable);\n    return isAvailable;\n  }\n\n  //this method will request to use the device speech recognition features\n  async getPermission():Promise<void>{\n    try {\n      const permission= await this.speechRecognition.requestPermission();\n      console.log(permission);\n      return permission;\n    } catch (error) {\n      console.log(\"ERROR :\"+error)\n    }\n  }\n\n  //this method will check if there is permission to use the device speech recognition features\n  async hasPermission():Promise<boolean>{\n    try {\n      const hasPermission= await this.speechRecognition.hasPermission();\n      console.log(hasPermission);\n      return hasPermission;\n    } catch (error) {\n      console.log(\"ERROR :\"+ error)\n    }\n  }\n  \n  //this method will get the supported spoken Languages\n  async getSupportedLanguages():Promise<Array<String>>{\n    try {\n      const languages= await this.speechRecognition.getSupportedLanguages();\n      console.log(languages);\n      return languages;\n    } catch (error) {\n      console.log(\"ERROR :\"+error)\n    }\n  }\n\n  //this method will start listing to the SPEECH spoken by user\n  listenForSpeech():void{\n    this.speechRecognition.startListening()\n    .subscribe(data => {\n      console.log(data);\n      //alert(`Spoken Data : ${data}`);\n      //updating UI text area\n      this.convertedSpeechMessage=data[0];\n\n    } , error => console.log(error));\n  }\n\n\n  //=== === === === === === === === === BLUTOOTH METODS === === === === === === === === === \n\n  //this method will disconnect the glove and go back to device info page\n  endSubscriptionFromBluetooth(){\n    //disconnecting device\n    this.bluetoothSerial.disconnect();\n    //changing page\n    this.goToDeviceInfoPage();\n\n    this.isSubscribedToBluetooth=false;\n  }\n  \n\n  //this method will SUBSCRIBE data via the bluethooth serial - will check for incoming bluetooth serial data\n  subscribeDataFromBluetooth() {\n\n    this.isSubscribedToBluetooth=true;\n  \n    let self = this;\n    // the success callback is called whenever data is received\n    let subscribeObservable = this.bluetoothSerial.subscribe('\\n');\n\n    //This function will bind the bluethooth data to the text area\n    function invoke(ins, dataObservable) {\n      dataObservable.subscribe((res) => {\n        ins.msgFromGlove = res;\n        alert(`Data is : ${ins.msgFromGlove}`);\n\n        // //checking if sound is on\n        // if(this.isSoundOn){\n        //   //calling sat text method to output the speech\n        //   this.sayText();\n        // }\n       \n      }).catch(e => {\n        console.log(\"SUBSCRIBE ERROR =========> \"+e);\n        this.isSubscribedToBluetooth=false;\n      });\n    }\n    \n    //calling the above method\n    invoke(self, subscribeObservable);\n  }\n\n  //=== === === === === === === === === PAGE NAVIGATION === === === === === === === === === === ===\n\n  //navigate to the deviceInfo page\n  goToDeviceInfoPage() {\n    this.navCtrl.push(HomePage);\n  }\n\n   //=== === === === === === === === === === TESTING METHODS === === === === === === === === === ===\n\n   //this method will SEND data via the bluethooth serial  - FOR TESTING\n   sendDataToBluetooth() {\n    //writeing to the bluetooth serial\n    this.bluetoothSerial.write('Sample text');\n  }\n\n  //this method will READ data via the bluethooth serial - FOR TESTING\n  readDataFromBluetooth() {\n    var dataVal = this.bluetoothSerial.read();\n    var self = this;\n\n    //This function will bind the bluethooth data to the text area\n    function invoke(ins, dataPromise) {\n      dataPromise.then((res) => {\n        ins.msgFromGlove = res;\n        alert(`Data is -> ${ins.msgFromGlove}`);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n    //calling the above method\n    invoke(self, dataVal);\n  }\n   //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/convertor/convertor.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { RegisterPage } from '../register/register';\nimport { HomePage } from '../home/home';\nimport { MenuController } from 'ionic-angular';\nimport { UserService } from '../../app/user.service';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  //this variable will store the login button pressed status\n  isLoginPressed:boolean=false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public menu: MenuController,public userService:UserService) {\n    //this will diabale the side menu in the login screen\n    this.menu.enable(false);\n    this.isLoginPressed=false;\n  }\n\n  //This is the user JSON object that will be passed to the onLogin Method\n  // user={\n  //   'email' : null,\n  //   'password' : null\n  // }\n\n  user={\n    \"email\": \"wdevon99@gmail.com\",\n    \"password\": \"123456\"\n  }\n\n  //=== === === === === === === === === ===  LOGIN METHOD == === === === === === === === === === ===\n  onLogin(){\n    console.log(\"Login Pressed\");\n    this.isLoginPressed=true;\n    //checking if the textfield and password fields are empty or not\n    if(this.user.password==null || this.user.email==null){\n      //alert\n      alert(\"All fields must be filled!\");\n    }else{\n      //subscribe to the observable returned to send a post request to login a user\n      this.userService.loginUser(this.user).subscribe(\n        (response)=>{\n          \n          let body= JSON.parse(response._body);\n          let loginStatus = body.auth;\n\n          //checking the staus to check if the user credentials are valid\n          if(loginStatus){\n            //changing the page to the home page\n            this.goToHomePage();\n            alert(\"Welcome :)\");    \n\n          }\n\n        },\n        (error)=>{\n          //displaying the login failed alert\n          alert(\"Login Failed , Invalid Credentials\");\n          this.isLoginPressed=false;\n          console.log(\"ERROR :\");\n          console.log(error);\n        }\n      );\n\n    }\n  }\n\n  //== === === === === === === === === === === == === === === === === === === === === === == === ===\n\n  saveJwtToken(){\n\n  }\n\n  \n\n  //=== === === === === === === === === PAGE NAVIGATION === === === === === === === === === === ===\n\n  //this method will chage the page to the RegisterPage\n  goToHomePage(){   \n    this.navCtrl.push(HomePage);    \n  }\n  //this method will chage the page to the RegisterPage\n  goToRegisterPage(){   \n    this.navCtrl.push(RegisterPage);    \n  }\n\n\n  //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { UserService } from '../../app/user.service';\nimport { LoginPage } from '../login/login';\n\n\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n\n  //this is the user JSON object\n  // user= {\n  //   \"name\":null,\n  //   \"email\": null,\n  //   \"password\": null,\n  //   \"cpassword\":null,\n  //   \"phoneNumber\": null\n  // }\n\n  user= {\n    \"name\":\"null\",\n    \"email\": \"null@gamil.com\",\n    \"password\": \"123456\",\n    \"cpassword\":\"123456\",\n    \"phoneNumber\": \"0000000000\"\n  }\n\n \n  constructor(public navCtrl: NavController, public navParams: NavParams ,public userService:UserService ) {\n  \n  }\n\n\n   onSave(){\n     \n    if(this.user.name ==null || this.user.email ==null || this.user.password ==null || this.user.cpassword ==null || this.user.phoneNumber ==null){\n      alert(\"All fields must be filled!\");   \n    }else{\n      if(this.user.password!=this.user.cpassword){\n        alert(\"Password Mismatch\");\n      }else{\n        alert(\"Sucessfully Registered :)\"); \n        //subscribing to the observable retured to send a post request  \n        this.userService.registerUser(this.user).subscribe(\n          (response) => {\n            console.log(\" Headers:\"+ response.headers);\n          },\n          (error)=>{\n            console.log(error);\n            alert(\"ERROR\");  \n          }\n          \n        );\n        this.goLoginPage();\n      }\n    }\n  \n\n  }\n  //=== === === === === === === === === PAGE NAVIGATION === === === === === === === === === === ===\n\n  //navigate to the deviceInfo page\n  goLoginPage() {\n    this.navCtrl.push(LoginPage);\n  }\n\n  //=== === === === === === === === === === === === === === === === === === === === === === === ===\n\n\n  \n  ionViewDidLoad() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import { Injectable } from '@angular/core';\nimport { Headers,Http } from '@angular/http';\n\n@Injectable()\nexport class UserService{\n\n    constructor(public http:Http){\n\n    }\n    //this method will return a observable which can be used to register a user via a post request\n    registerUser( user : any){\n        return this.http.post('https://secret-harbor-59836.herokuapp.com/users', user  );  \n    }\n    //this method will return a observable that can be used to login a user\n    loginUser( user : any){\n        return this.http.post('https://secret-harbor-59836.herokuapp.com/users/login', user  );  \n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts"],"sourceRoot":""}